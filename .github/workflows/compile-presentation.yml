name: deploy-landing-page

# Only run this when the master branch changes
on:
  push:
    branches:
    - main
  schedule:
    # every hour
    - cron: '*/5 * * * *'
  workflow_dispatch:
    inputs:
      release:
        description: 'Release version'
        default: ""
      name:
        description: 'Release name'
        default: ""

# This job installs dependencies, builds the book, and pushes it to `gh-pages`
jobs:

  compile-quarto:
    runs-on: ubuntu-22.04
    steps:

    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Pages
      id: pages
      uses: actions/configure-pages@v3
      with:
        enablement: true
  
    # Let's do the Quarto
    - name: Set up Quarto
      uses: quarto-dev/quarto-actions/setup@v2
    - name: Install R
      uses: r-lib/actions/setup-r@v2
      with:
        r-version: '4.4.2'

    - name: Install R Dependencies 
      uses: r-lib/actions/setup-renv@v2
      with:
        cache-version: 1
    - name: Set Environment Variables
      run: |
        echo "QUALTRICS_BASE_URL=${{ secrets.QUALTRICS_BASE_URL }}" >> $GITHUB_ENV
        echo "QUALTRICS_API_KEY=${{ secrets.QUALTRICS_API_KEY }}" >> $GITHUB_ENV
          
    - name: Render Quarto Project
      env:
        QUARTO_PRINT_STACK: true
    #   uses: quarto-dev/quarto-actions/render@v2
    #   with:
    #     path: ./presentation
      run: |
        echo "xxxxxxxxxx${QUALTRICS_BASE_URL}xxxxxxxxxx"
        test -z "${QUALTRICS_BASE_URL}" && echo "QUALTRICS_BASE_URL is not set" && exit 1
        quarto render  index.qmd --output-dir _html
        quarto render slides/index.qmd --output-dir _html

    - name: Upload Artifact
      uses: actions/upload-pages-artifact@v3.0.1    
      with:
        path: _html
    
  publish:
    needs: compile-quarto
    
    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 
  release:
    needs: compile-quarto
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Get Github pages artifact
        id: download-artifact
        uses: actions/download-artifact@v4
        with:
          name: github-pages
      - name: Show files and unzip
        run: |
          tar -xvf artifact.tar
          ls -la 
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        # only run if the workflow variable `release` is set
        if: ${{ github.event.inputs.release != '' }}
        with:
          tag_name: ${{ github.event.inputs.release }}
          name: ${{ github.event.inputs.name }}
          body: "Release of the presentation HTML version."
          files: _html/*
